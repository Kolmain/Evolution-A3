disabledAI=1;
author="Kolmain";
OnLoadName = "Evoluton-A3";
OnLoadMission = "An ArmA Classic.";
loadScreen = "img\evo.paa";
respawn = 3;
respawnDelay = 15;
respawnTemplates[] = {"MenuPosition", "Revive"};
reviveDelay = 10;
respawnOnStart = -1;
enableDebugConsole = 1;
taskManagement_markers2D = 1;
taskManagement_markers3D = 1;
taskManagement_propagate = 1;
taskManagement_drawDist = 2500;
corpseManagerMode = 1; //Type of removed bodies: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
corpseLimit = 10; //Max number of bodies which can be available at the same time. When exceeded, start deleting immediately.
corpseRemovalMinTime = 120; //Minimal time in seconds a body stays in the scene (can't be removed sooner).
corpseRemovalMaxTime = 240; //Maximal time in seconds after which a dead body is removed (can't stay longer)
wreckManagerMode = 1; //Type of removed wrecks: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
wreckLimit = 5; //Max number of wrecks which can be available at the same time. When exceeded, start deleting immediately.
wreckRemovalMinTime = 120; //Minimal time in seconds a wreck stays in the scene (can't be removed sooner).
wreckRemovalMaxTime = 240; //Maximal time in seconds after which a wreck is removed (can't stay longer)

#include "bon_recruit_units\dialog\common.hpp"
#include "bon_recruit_units\dialog\recruitment.hpp"
#include "ATM_airdrop\dialog.hpp"
#include "CHVD\dialog.hpp"
#include "R3F_LOG\desc_include.h"

class Header
{
 gameType = COOP;            //DM, Team, Coop, CTI
 minPlayers = 1;             //min # of players the mission supports
 maxPlayers = 30;            //Max # of players the mission supports
};


class Params
{
    class initialWeatherParam {
        title = "Starting Weather";
        values[] = {0,1,2,3,4};
        texts[] = {"Clear","Overcast","Rain","Fog","Random"};
        default = 4;
       };
	class Daytime {
		title = "Starting Time";
		texts[] = {"Morning","Day","Evening","Night"};
		values[] = {6,12,18,0};
		default = 12;
		function = "BIS_fnc_paramDaytime";
 	};
    class pfatigue {
		title = "Player Fatigue";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 0;
	};
	class pRespawnPoints {
		title = "Player Respawn Points";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 1;
	};
	class infSquadsParam {
		title = "# of Infantry Squads at AO";
		texts[] = {"1","2","3","4","5"};
		values[] = {1,2,3,4,5};
		default = 5;
	};
	class mechSquadsParam {
		title = "# of Mechanized Squads at AO";
		texts[] = {"1","2","3","4","5"};
		values[] = {1,2,3,4,5};
		default = 1;
	};
	class armorSquadsParam {
		title = "# of Armor at AO";
		texts[] = {"1","2","3","4","5"};
		values[] = {1,2,3,4,5};
		default = 1;
	};
	class pilotDressRequired {
		title = "Require Pilot Loadout to Pilot";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 1;
	};
	class rankVehicles {
		title = "Require Rank for Vehicles";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 1;
	};
	class fullArsenal {
		title = "Require Rank for Weapons";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 1;
	};
	class mhqParam {
		title = "Mobile HQ Spawn Point";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 0;
	};
	class randomSideMissions {
		title = "Randomly Generate Side Missions";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 1;
	};
	class r3fParam {
		title = "R3F Logistics";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 0;
	};
	class killNotificationParam {
		title = "Visible Kill Notifications";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 1;
	};
	class bisJukebox {
		title = "ArmA 3 Jukebox";
		texts[] = {"Disabled","Enabled"};
		values[] = {0,1};
		default = 1;
	};

};

class CfgFunctions
{
    #include "CHVD\CfgFunctions.hpp"
    class EVO
	{
		tag = "EVO";
		class script
		{
			file = "EVO";
			class demoOnly {};
			class deployEplayer {};
			class deployMplayer {};
			class globalSideChat {};
			class initEVO {};
			class initTarget {};
			class paradrop {};
			class rank {};
			class repair {};
			class rtoffline {};
			class pinit {};
			class respawnRepair {};
			class amb {};
			class officer {};
			class sendToHC {};
			class sendToServer {};
			class vehicleCheck {};
			class handleScore {};
			class onUnitKilled {};
			class getVehicleInfo {};
			class getWeaponInfo {};
			class getMagazineInfo {};
			class sm_aaHunt {};
			class sm_baseDef {};
			class sm_attackMil {};
			class sm_convoy {};
			class sm_reinforce {};
			class buildSideMissionArray {};
			class osm {};
			class wrapUp {};
			class rearm {};
			class buildMagazineArray {};
			class buildAmmoCrate {};
			class newTargetTasks {};
			class supportPoints {};
			class basicRespawn {};
			class sm_csar {};
			class playerNearby {};
		};
	};
};

class CfgSounds
{
	sounds[] = {Paycall,Recall,Vent,Vent2,Para};


	class Paycall
	{
		name = "Paycall";
		sound[] = {"Sound\Paycall.ogg", db-1, 1.0};
		titles[] = {};
	};
	class Recall
	{
		name = "Recall";
		sound[] = {"Sound\Recall.ogg", db-1, 1.0};
		titles[] = {};
	};
	class Goodjob
	{
		name = "Goodjob";
		sound[] = {"Sound\goodjob.ogg", db-1, 1.0};
		titles[] = {};
	};
	class sectorCaptured_0
	{
		name = "sectorCaptured_0";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\40_FriendliesCapturedSector\mp_groundsupport_40_friendliescapturedsector_BHQ_0.ogg", 1, 1.0};
		titles[] = {};
	};
	class sectorCaptured_1
	{
		name = "sectorCaptured_1";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\40_FriendliesCapturedSector\mp_groundsupport_40_friendliescapturedsector_BHQ_1.ogg", 1, 1.0};
		titles[] = {};
	};
	class sectorCaptured_2
	{
		name = "sectorCaptured_2";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\40_FriendliesCapturedSector\mp_groundsupport_40_friendliescapturedsector_BHQ_2.ogg", 1, 1.0};
		titles[] = {};
	};
	class opforCaptured_2
	{
		name = "opforCaptured_2";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\35_EnemyCapturedSector\mp_groundsupport_35_enemycapturedsector_BHQ_2.ogg", 1, 1.0};
		titles[] = {};
	};
	class opforCaptured_1
	{
		name = "opforCaptured_1";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\40_FriendliesCapturedSector\mp_groundsupport_40_friendliescapturedsector_BHQ_1.ogg", 1, 1.0};
		titles[] = {};
	};
	class opforCaptured_0
	{
		name = "opforCaptured_0";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\40_FriendliesCapturedSector\mp_groundsupport_40_friendliescapturedsector_BHQ_0.ogg", 1, 1.0};
		titles[] = {};
	};
	class capturing_2
	{
		name = "capturing_2";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\30_FriendliesCapturingSector\mp_groundsupport_30_friendliescapturingsector_BHQ_2.ogg", 1, 1.0};
		titles[] = {};
	};
	class capturing_1
	{
		name = "capturing_1";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\30_FriendliesCapturingSector\mp_groundsupport_30_friendliescapturingsector_BHQ_1.ogg", 1, 1.0};
		titles[] = {};
	};
	class capturing_0
	{
		name = "capturing_0";
		sound[] = {"\a3\dubbing_f_heli\mp_groundsupport\30_FriendliesCapturingSector\mp_groundsupport_30_friendliescapturingsector_BHQ_0.ogg", 1, 1.0};
		titles[] = {};
	};


	class Vent {name="Vent";sound[]={ATM_airdrop\data\Vent.ogg,db-11,1.0};titles[] = {};};
	class Vent2 {name="Vent2";sound[]={ATM_airdrop\data\Vent2.ogg,db-11,1.0};titles[] = {};};
	class Para {name="Para";sound[]={ATM_airdrop\data\parachute.ogg,db-11,1.0};titles[] = {};};

};


class CfgNotifications
{
	class Default
	{
		title = ""; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = ""; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = ""; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 5; // How many seconds will the notification be displayed
		priority = 0; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};
	class unlocked
	{
		title = "ASSET AVAILABLE";
		iconPicture = "%1";
		description = "%2";
		priority = 1;
	};
	class promoted
	{
		title = "FIELD PROMOTION";
		iconPicture = "%1";
		description = "%2";
		priority = 1;
	};
	class notQualified
	{
		title = "NOT QUALIFIED TO OPERATE";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIconFailed_ca.paa";
		description = "%1";
		priority = 1;
	};
	class deployed
	{
		title = "%1";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcon_ca.paa";
		description = "%2";
		priority = 1;
	};
	class PointsAdded
	{
		title = "POINTS ADDED";
		iconText = "+%2";
		description = "%1";
		color[] = {0.5,1,1,1};
		priority = 0;
	};
	class PointsRemoved
	{
		title = "POINTS DEDUCTED";
		iconText = "-%2";
		description = "%1";
		color[] = {1,0,0,1};
		priority = 0;
	};
};


class CfgCommunicationMenu
{
    class recruit
    {
        text = "Infantry Reinforcements";
        submenu = "";
        expression = "_this execVM 'bon_recruit_units\open_dialog.sqf';";
        icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\call_ca.paa";
        cursor = "\a3\Ui_f\data\IGUI\Cfg\Cursors\iconCursorSupport_ca.paa";
        enable = "1";
        removeAfterExpressionCall = 0;
    };
};

class CfgHints
{
	class Gamemode
	{
		// Topic title (displayed only in topic listbox in Field Manual)
		displayName = "Evolution Gamemode";
		class respawn
		{
			displayName = "Main Airbase";
			displayNameShort = "HQ";
			description = "Welcome to the battlefield, %11. This is your main base of operations. This is where reinforcements arrive before being transported to the Area of Operations, as well as the location of any support units used during the battle. You also have supplies available here to restructure your loadout.";
            tip = "You are not forced to respawn at the Airbase. You may choose to respawn at another friendly position instead.";
			arguments[] = {
				"name player"
			};
			image = "\a3\ui_f\data\gui\cfg\hints\Miss_icon_ca.paa";
			noImage = false;
		};
		class revive
		{
			displayName = "Incapacitation";
			displayNameShort = "Reviving Allies";
			description = "If an infantry unit receives too much damage, they may become incapacitated before bleeding out. Once incapacitated, a friendly unit can approach the individual and select %3First Aid%4 from their action menu to begin brining the unit back to a combat effective state. Going into an incapacitated state does not count as a death. Friendly units can also %3Drag%4 and %3Carry%4 an incapacitated unit from the action menu. ";
            tip = "While incapacitated, enemies may ignore you if you lay still. However, if you attempt to move or fire your weapon, you will become an active target again.";
			arguments[] = {};
			image = "\a3\ui_f\data\gui\cfg\hints\Miss_icon_ca.paa";
			noImage = false;
		};
		class farp
		{
			displayName = "Forward Arming and Refueling Point";
			displayNameShort = "FARP";
			description = "While at the Forward Arming and Refueling Point, players have the option to modify their loadout by approaching supplies and using their action menu to select %3Change Loadout%4. Additional equipment will become available as you accrue points during the operation.";
            tip = "As you gain points on the battlefield, special equipment will become available for your use such as UAVs and long barreled rifles.";
			arguments[] = {};
			image = "\a3\ui_f\data\gui\cfg\hints\Miss_icon_ca.paa";
			noImage = false;
		};
		class mash
		{
			displayName = "Mobile Army Surgical Hospital";
			displayNameShort = "MASH";
			description = "While at the Mobile Army Surgical Hospital, players have the option to heal themselves by approaching the MASH tent and using their action menu to select %Heal at MASH%4. The player who deployed the MASH will receive the points for healing the individual.";
            tip = "As you gain points on the battlefield, special equipment will become available for your use such as UAVs and long barreled rifles.";
			arguments[] = {};
			image = "\a3\ui_f\data\gui\cfg\hints\Miss_icon_ca.paa";
			noImage = false;
		};
		class kill
		{
			displayName = "Opposing Forces";
			displayNameShort = "OPFOR";
			description = "During this mission you will have a bountiful amount of enemies. These enemies range from infantry to air support, and each will provide you with a different amount of points for a secured kill. A kill notification will be displayed if you visually witness your kill being secured.";
            tip = "If you don't receive the kill notification, it doesn't mean you didn't necessarily secure the kill, only you did not see it!";
			arguments[] = {};
			image = "\a3\ui_f\data\gui\cfg\hints\Miss_icon_ca.paa";
			noImage = false;
		};
		class recruiting
		{
			displayName = "Infantry Reinforcements";
			displayNameShort = "Requesting Infantry";
			description = "Players can recruit AI units to reinforce them both at the main base and in the area of operations.%1<t></t>1. Point at the target.%1<t></t>2. Press %3[0]%4 to enter the command menu.%1<t></t>3. Select %3Communications%4 - %3[8]%4.%1<t></t>4. Select %Request Reinforcements%4.%1<t></t> Command will then confirm the request and dispatch the friendly forces to the requested location. <t></t>";
			tip = "These forces will not be reinforced once they are no longer combat effective, and players may only request based on their rank.";
			arguments[] = {};
			image = "\a3\ui_f\data\gui\cfg\hints\Commanding_ca.paa";
			noImage = false;
		};
	};
};
